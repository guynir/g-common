buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

//
// Target hotspot version.
//
sourceCompatibility = 1.8
targetCompatibility = 1.8

//
// Artifact repositories.
//
repositories {
    // Bintray's JCenter repository
    jcenter()

    // Maven central repositories.
    mavenCentral()

    // GuyRN's dedicated Maven repository.
    maven {
        url "https://dl.bintray.com/guynir75/public"
    }
}

// If including project did not specify spring version, assume versio 4.3.0.RELEASE.
if (!project.hasProperty("springVersion")) {
    ext.springVersion = "4.3.0.RELEASE"
}

//
// Dependencies shared by all projects.
//
dependencies {
    compile 'org.apache.logging.log4j:log4j-api:2.5'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.5'

    compile("org.slf4j:slf4j-api:$slf4jVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    compile("org.springframework:spring-core:$springVersion") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    compile("org.springframework:spring-aop:$springVersion") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    compile "joda-time:joda-time:$jodaTimeVersion"

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.4'

    testCompile 'junit:junit:4.12'
    testCompile 'info.cukes:cucumber-junit:1.2.4'
    testCompile 'info.cukes:cucumber-java:1.2.4'
    testCompile 'info.cukes:cucumber-core:1.2.4'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

//
// Bintray configuration for uploading artifacts.
//
bintray {
    user = getSystemProperty('BINTRAY_USERNAME')
    key = getSystemProperty('BINTRAY_API_KEY')

    publish = true

    publications = ['PublishArtifact']

    pkg {
        repo = 'public'
        name = 'gcommon'
        vcsUrl = 'https://github.com/guynir/g-common.git'
        licenses = ['Apache-2.0']

        version {
            name = '0.9'
            desc = 'gcommon library'
            released = new Date()
            vcsTag = '1.3.0'
        }
    }
}

//
// Maven repo publishing information.
//
publishing {
    publications {
        PublishArtifact(MavenPublication) {
            groupId 'com.guyrn'
            artifactId 'gcommon'
            version '0.9'

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

publish.dependsOn clean, assemble, bintrayUpload

//
// Add sources jar when publishing.
//
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//
// Add java when publishing.
//
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

defaultTasks 'clean', 'assemble'

/**
 * Read system property.
 *
 * @param name Name of property.
 * @return Property value.
 * @throws GradleException If property does not exist.
 */
def getSystemProperty(String name) throws GradleException {
    String value = System.getenv(name)
    if (value == null) {
        throw new GradleException("Missing '$name' system property.")
    }
    return value
}


